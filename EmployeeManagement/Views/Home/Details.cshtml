@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService authorizationService

@inject SignInManager<ApplicationUser> signInManager;

@model HomeDetailsViewModel

@{
    ViewBag.Title = "Employee Details";
    var photoPath = "~/Images/" + (Model.Employee.PhotoPath ?? "noimage.jpg");
}

<div class="row justify-content-center m-3">
    <div class="col-sm-8">
        <div class="card">
            <div class="card-header">
                <h1>@Model.Employee.Name</h1>
            </div>

            <div class="card-body text-center">
                <img class="card-img-top" src="@photoPath" asp-append-version="true" />

                <h4>Employee ID : @Model.Employee.Id</h4>
                <h4>Email : @Model.Employee.Email</h4>
                <h4>Department : @Model.Employee.Department</h4>

            </div>
            <div class="card-footer text-center">
                <form asp-action="Delete" asp-route-id="@Model.Employee.Id" method="post">
                    <a asp-controller="home" asp-action="index"
                       class="btn btn-primary">Back</a>
                    @if (signInManager.IsSignedIn(User) &&
                    (await authorizationService.AuthorizeAsync(User, "SuperAdminOrAdminRolePolicy")).Succeeded ||
                    (await authorizationService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded ||
                    (await authorizationService.AuthorizeAsync(User, "DeleteRolePolicy")).Succeeded)
                    {

                    @if ((await authorizationService.AuthorizeAsync(User, "SuperAdminOrAdminRolePolicy")).Succeeded ||
                        (await authorizationService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded)
                    {
                        <a asp-action="edit" asp-controller="home"
                           asp-route-id="@Model.Employee.Id"
                           class="btn btn-primary">Edit</a>

                    }
                    @if ((await authorizationService.AuthorizeAsync(User, "SuperAdminOrAdminRolePolicy")).Succeeded ||
                        (await authorizationService.AuthorizeAsync(User, "DeleteRolePolicy")).Succeeded)
                    {
                        <span id="confirmDeleteSpan_@Model.Employee.Id" style="display:none">
                            <span>Are you sure you want to delete?</span>
                            <button type="submit" class="btn btn-danger">Yes</button>
                            <a class="btn btn-primary text-white"
                               onclick="confirmDelete('@Model.Employee.Id', false)">No</a>
                        </span>

                        <span id="deleteSpan_@Model.Employee.Id">
                            <a class="btn btn-danger text-white"
                               onclick="confirmDelete('@Model.Employee.Id', true)">Delete</a>
                        </span>
                    }

                    }

                </form>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/CustomScript.js"></script>
}